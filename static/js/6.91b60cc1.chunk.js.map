{"version":3,"sources":["components/form/Field/index.jsx","hooks/useForm.js","components/form/FormGenerator/index.jsx","pages/Auth/LogIn/components/LogInForm/index.jsx","pages/Auth/LogIn/index.jsx","pages/Home/index.jsx","pages/Posts/PostsList/components/PostListItem/index.jsx","utils/types/postsTypes.js","pages/Posts/PostsList/index.jsx","utils/types/usersTypes.js","pages/Users/UsersIndex/index.jsx","pages/Users/UserDetail/index.jsx","routing/routes.js","app/RoutesContainer.jsx","components/layout/Breadcrumb/index.jsx","routing/menu.js","components/layout/Sidebar/index.jsx","components/layout/AppLayout/index.jsx","app/AppContainer.jsx"],"names":["Field","name","Input","component","onChange","item","validate","label","options","rest","changeValue","value","error","touched","handleOnChange","e","val","target","useEffect","Item","htmlFor","validateStatus","help","onBlur","defaultProps","undefined","useForm","fields","useState","reduce","initialForm","initialValue","formInitializer","form","setForm","errors","setErrors","formValues","useMemo","Object","entries","fv","key","values","map","filter","err","updatedItem","FormGenerator","onSubmit","layout","handleChange","onFinish","length","title","content","className","placeholder","col","htmlType","LogInForm","submitLogIn","span","Password","gutter","tooltipData","LogIn","logIn","justify","align","xs","md","lg","extra","InfoCircleOutlined","mapDispatchToProps","logInNotifier","connect","Home","token","t","auth","PostListItem","shape","id","number","string","body","post","PostsList","fetchPosts","posts","newPost","onClick","loading","fetchPostsNotifier","push","NEW_POST_PATH","state","email","phone","username","website","address","street","suite","city","zipcode","geo","lat","lng","UsersIndex","fetchUsers","users","showUser","columns","dataIndex","width","render","_id","row","type","icon","EyeFilled","rowKey","dataSource","fetchUsersNotifier","showUserNotifier","userList","UserDetail","user","fetchUserDetails","userId","useRouteMatch","params","active","fetchUserDetailsNotifier","userDetail","Form","lazy","routes","path","paths","Component","exact","roles","USER_ROLE","RoutesContainer","role","roleRoutes","includes","fallback","to","HOME_PATH","reconstructPath","index","split","_path","i","join","Breadcrumb","pathname","goTo","locationItems","handleClick","public","POSTS_PATH","ContainerOutlined","USERS_PATH","UserOutlined","Sider","Sidebar","mode","selectedKeys","menu","Icon","Header","Content","Footer","lngButton","action","toUpperCase","AppLayout","children","language","setLanguage","i18n","changeLanguage","withHeader","withSidebar","withBreadcrumb","process","AppContainer","locale","esES","Loader","transparent","changeLanguageNotifier","location","router"],"mappings":"8RAIMA,EAAQ,SAAC,GASR,IARLC,EAQI,EARJA,KACWC,EAOP,EAPJC,UACAC,EAMI,EANJA,SACAC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,QACGC,EACC,mFACEC,EAAc,SAACC,EAAOC,GAC1BR,EAAS,CAAEH,OAAMU,QAAOC,QAAOC,SAAS,KAGpCC,EAAiB,SAACC,GACtB,IAAMC,EAAMD,EAAEE,OAASF,EAAEE,OAAON,MAAQI,EAClCH,EAAQN,EAAWA,EAASU,GAAO,KACzCN,EAAYM,EAAKJ,IAQnBM,qBAAU,WACJb,EAAKM,OAAOG,EAAeT,EAAKM,SACnC,IASH,OACE,sBAAMQ,KAAN,eACEZ,MAAOA,EACPa,QAASnB,EACToB,gBAVF,OAAIhB,QAAJ,IAAIA,OAAJ,EAAIA,EAAMM,QACG,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMO,OAAQ,QAAU,UAE1B,KAQLU,KAAI,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAMO,OACRJ,GAEJ,kBAACN,EAAD,eACED,KAAMA,EACNU,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAMM,MACbY,OA3Be,WACnB,IAAMX,EAAQN,EAAWA,EAAQ,OAACD,QAAD,IAACA,OAAD,EAACA,EAAMM,OAAS,KACjDD,EAAW,OAACL,QAAD,IAACA,OAAD,EAACA,EAAMM,MAAOC,IA0BrBR,SAAUU,GACNL,MAgBZT,EAAMwB,aAAe,CACnBlB,SAAU,KACVD,UAAMoB,EACNlB,WAAOkB,EACPjB,QAAS,IAGIR,Q,iBC/BA0B,EA9BC,SAACC,GAAY,IAAD,EACFC,mBAdF,SAACD,GAAD,OACtBA,EAAOE,QACL,SAACC,EAAD,OAAgB7B,EAAhB,EAAgBA,KAAM8B,EAAtB,EAAsBA,aAAtB,mBAAC,eACID,GADL,kBAEG7B,EAAO,CACNU,MAAOoB,EACPnB,WAAOa,EACPZ,UAAWkB,OAGf,IAI+BC,CAAgBL,IADvB,mBACnBM,EADmB,KACbC,EADa,OAEEN,oBAAS,GAFX,mBAEnBO,EAFmB,KAEXC,EAFW,KAIpBC,EAAaC,mBACjB,kBACEC,OAAOC,QAAQP,GAAMJ,QAAO,SAACY,EAAD,GAA2B,IAAD,mBAApBC,EAAoB,KAAb/B,EAAa,KAAbA,MACvC,OAAO,2BAAK8B,GAAZ,kBAAiBC,EAAM/B,MACtB,MACL,CAACsB,IAGHf,qBAAU,WACRkB,EACEG,OAAOI,OAAOV,GACXW,KAAI,qBAAGhC,SACPiC,QAAO,SAACC,GAAD,QAAWA,QAEtB,CAACb,IASJ,MAAO,CAPc,SAACc,GACpBb,EAAQ,2BACHD,GADE,kBAEJc,EAAY9C,KAAO8C,MAIFV,EAAYF,EAAQF,ICpCtCe,EAAgB,SAAC,GAAkC,IAAhCrB,EAA+B,EAA/BA,OAAQsB,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAAa,EACLxB,EAAQC,GADH,mBAC/CwB,EAD+C,KACjCd,EADiC,KACrBF,EADqB,KACbF,EADa,KAetD,OACE,uBAAMmB,SAba,WACdjB,EAAOkB,OAGV,IAAMzC,MAAM,CACV0C,MAAO,QACPC,QAAQ,oGAJVN,EAASZ,IAWmBa,OAAO,WAAWM,UAAU,kBACxD,sBAASN,EACNvB,EAAOiB,KACN,gBACEzC,EADF,EACEA,UACAF,EAFF,EAEEA,KACAwD,EAHF,EAGEA,YACAlD,EAJF,EAIEA,MACAD,EALF,EAKEA,SACAE,EANF,EAMEA,QANF,IAOE0C,OAAUQ,GAPZ,aAOoB,GAPpB,GAOYA,IAPZ,OASE,uCAASA,EAAT,CAAchB,IAAKzC,IACjB,kBAAC,EAAD,CACEE,UAAWA,EACXF,KAAMA,EACNwD,YAAaA,EACblD,MAAOA,GAASkD,EAChBpD,KAAM4B,EAAKhC,GACXK,SAAUA,EACVE,QAASA,EACTJ,SAAU+C,SAMpB,uBAAQQ,SAAS,UAAjB,YAmBNX,EAAcxB,aAAe,CAC3B0B,OAAQ,IAGKF,O,8WCnETY,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACblC,EAAS,CACb,CACE1B,KAAM,WACNwD,YAAa,WACbtD,UAAU,IACV+C,OAAQ,CAAEQ,IAAK,CAAEI,KAAM,MAEzB,CACE7D,KAAM,WACNwD,YAAa,WACbP,OAAQ,CAAEQ,IAAK,CAAEI,KAAM,KACvB3D,UAAW,IAAM4D,WAMrB,OACE,yBAAKP,UAAU,eACb,kBAACR,EAAA,EAAD,CAAeC,SAAUY,EAAalC,OAAQA,EAAQuB,OAJ3C,CAAEc,OAAQ,QAa3BJ,EAAUpC,aAAe,GAEVoC,Q,SC3BTK,G,OACJ,4CAEE,6BAFF,mBAOIC,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,uBAAKX,UAAU,SAASY,QAAQ,SAASC,MAAM,UAC7C,uBAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvB,uBACElB,MAAM,SACNmB,MACE,uBAASnB,MAAOW,GACd,kBAACS,EAAA,EAAD,QAIJ,kBAAC,EAAD,CAAWb,YAAaM,QAWlCD,EAAM1C,aAAe,GAErB,IAAMmD,EAAqB,CACzBR,MAAOS,KAGMC,cAAQ,KAAMF,EAAdE,CAAkCX,GCxC3CY,EAAO,SAAC,GACZ,OAD0B,EAAZC,MAEP,yBAAKvB,UAAU,QAAQwB,YAAE,eADb,kBAAC,EAAD,OAQrBF,EAAKtD,aAAe,CAClBuD,MAAO,MAGT,IAIeF,eAJS,SAAC,GAAD,MAAe,CACrCE,MADsB,EAAGE,KACbF,SAGCF,CAAyBC,G,mDCnBlCI,GCFkBC,gBAAM,CAC5BC,GAAIC,SACJ/B,MAAOgC,SACPC,KAAMD,WDDa,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACtB,OAAO,uBAAMlC,MAAOkC,EAAKlC,OAAQkC,EAAKD,QAOxCL,EAAa1D,aAAe,GAEb0D,QEJTO,EAAY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAKtC,OAJA1E,qBAAU,WACHyE,EAAMtC,QAAQqC,MAClB,IAGD,uBACElC,UAAU,aACVF,MAAM,aACNmB,MAAO,uBAAQoB,QAASD,GAAjB,aAEP,uBAAME,SAAUH,EAAMtC,QACnBsC,EAAM/C,KAAI,SAAC4C,GACV,OACE,sBAAMrE,KAAN,CAAWuB,IAAK8C,EAAKJ,IACnB,kBAAC,EAAD,CAAcI,KAAMA,WAelCC,EAAUjE,aAAe,GAEzB,IAMMmD,EAAqB,CACzBe,WAAYK,IACZH,QAAS,kBAAMI,eAAKC,OAGPpB,eAXS,SAACqB,GACvB,MAAO,CACLP,MAAOO,EAAMP,MAAMA,SASiBhB,EAAzBE,CAA6CY,G,gDCnDpCN,gBAAM,CAC5BC,GAAIC,SACJc,MAAOb,SACPrF,KAAMqF,SACNc,MAAOd,SACPe,SAAUf,SACVgB,QAAShB,SACTiB,QAASpB,gBAAM,CACbqB,OAAQlB,SACRmB,MAAOnB,SACPoB,KAAMpB,SACNqB,QAASrB,SACTsB,IAAKzB,gBAAM,CACT0B,IAAKvB,SACLwB,IAAKxB,e,QCPLyB,EAAa,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvChG,qBAAU,WACR8F,MACC,IAEH,IAAMG,EAAU,CACd,CACE7D,MAAO,KACP8D,UAAW,KACX1E,IAAK,MAEP,CACEY,MAAO,OACP8D,UAAW,QAEb,CACE9D,MAAO,WACP8D,UAAW,YAEb,CACE9D,MAAO,QACP8D,UAAW,SAEb,CACE9D,MAAO,QACP8D,UAAW,SAEb,CACE9D,MAAO,UACP8D,UAAW,WAEb,CACEA,UAAW,KACXC,MAAO,IACPC,OAAQ,SAACC,EAAKC,GAAN,OACN,uBACEC,KAAK,OACL5B,QAAS,kBAAMqB,EAASM,IACxBE,KAAM,kBAACC,EAAA,EAAD,WAMd,OACE,yBAAKnE,UAAU,eACb,uBAAOoE,OAAO,KAAKC,WAAYZ,EAAOE,QAASA,MAWrDJ,EAAWvF,aAAe,GAE1B,IAIMmD,EAAqB,CACzBqC,WAAYc,IACZZ,SAAUa,KAGGlD,eATS,SAACqB,GAAD,MAAY,CAClCe,MAAOf,EAAMe,MAAMe,YAQmBrD,EAAzBE,CAA6CkC,G,2BCrEtDkB,EAAa,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEdC,EACRC,cADFC,OAAUF,OAOZ,OAJAlH,qBAAU,WACRiH,EAAiBC,KAChB,IAEEF,EAGH,uBACE5E,MAAO4E,EAAI,UAAMA,EAAK9C,GAAX,cAAmB8C,EAAKjI,MAAS,YAC5CuD,UAAU,eAET0E,EACC,2BACE,sBAAc/G,KAAd,CAAmBZ,MAAM,SAAS2H,EAAK/B,OACvC,sBAAchF,KAAd,CAAmBZ,MAAM,SAAS2H,EAAK9B,OACvC,sBAAcjF,KAAd,CAAmBZ,MAAM,YACtB2H,EAAK7B,UAER,sBAAclF,KAAd,CAAmBZ,MAAM,WAAW2H,EAAK5B,SACzC,sBAAcnF,KAAd,CAAmBZ,MAAM,WAAzB,UACM2H,EAAK3B,QAAQC,OADnB,cAC+B0B,EAAK3B,QAAQE,MAD5C,aACsDyB,EAAK3B,QAAQG,QAIrE,uBAAU6B,QAAM,KApBJ,6BA+BpBN,EAAWzG,aAAe,CACxB0G,UAAMzG,GAGR,IAIMkD,EAAqB,CACzBwD,iBAAkBK,KAGL3D,eARS,SAAC,GAAD,MAAgB,CACtCqD,KADsB,EAAGjB,MACbwB,cAO0B9D,EAAzBE,CAA6CoD,GCpDtDS,EAAOC,gBAAK,kBAAM,iCAwCTC,EAtCA,CACb,CACEtF,MAAO,OACPuF,KAAMC,IACNC,UAAWjE,EACXkE,OAAO,EACPC,MAAO,IAET,CACE3F,MAAO,QACPuF,KAAMC,IACNC,UAAWtD,EACXuD,OAAO,EACPC,MAAO,CAACC,MAEV,CACE5F,MAAO,WACPuF,KAAMC,IACNC,UAAWL,EACXM,OAAO,EACPC,MAAO,CAACC,MAEV,CACE5F,MAAO,QACPuF,KAAMC,IACNC,UAAWhC,EACXiC,OAAO,EACPC,MAAO,CAACC,MAEV,CACE5F,MAAO,cACPuF,KAAMC,IAAuB,WAC7BC,UAAWd,EACXe,OAAO,EACPC,MAAO,CAACC,OChCNC,GAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAa/G,mBACjB,kBAAMsG,EAAO/F,QAAO,gBAAGoG,EAAH,EAAGA,MAAH,OAAgBA,EAAM5F,QAAU4F,EAAMK,SAASF,QACnE,CAACA,IAGH,OACE,kBAAC,WAAD,CAAUG,SAAU,uBAAUhB,QAAM,KAClC,kBAAC,IAAD,KACGc,EAAWzG,KAAI,gBAAGiG,EAAH,EAAGA,KAAME,EAAT,EAASA,UAAWC,EAApB,EAAoBA,MAApB,OACd,kBAAC,IAAD,CAAOtG,IAAKmG,EAAMA,KAAMA,EAAM1I,UAAW4I,EAAWC,MAAOA,OAE7D,kBAAC,IAAD,CAAUQ,GAAIC,SAUtBN,GAAgB3H,aAAe,CAC7B4H,KAAM,IAGOD,U,oEC/BTO,I,OAAkB,SAACb,EAAMc,GAG7B,OAFgBd,EAAKe,MAAM,KACH/G,QAAO,SAACgH,EAAOC,GAAR,OAAcA,GAAKH,KACnCI,KAAK,OA6CPC,GAjCI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACxBC,EAAgBF,EAAWA,EAASL,MAAM,KAAO,GAEjDQ,EAAc,SAACvB,GAAD,OAAU,WAC5BqB,EAAKrB,KAGP,OACE,wBAAerF,UAAU,cACvB,uBAAerC,KAAf,CACEqC,UAAU,YACVqC,QAASuE,EAAYX,MAFvB,QAMCU,EAAcvH,KAAI,SAACvC,EAAMsJ,GAAP,OACjB,uBAAexI,KAAf,CACEuB,IAAKrC,EACLmD,UAAWmG,EAAQQ,EAAc9G,OAAS,EAAI,YAAc,GAC5DwC,QAASuE,EAAYV,GAAgBO,EAAUN,KAE9C,KAAUtJ,S,gDCxCN,IACbgK,OAAQ,CACN,CACE/G,MAAO,QACPuF,KAAMyB,IACN5C,KAAM6C,MAER,CACEjH,MAAO,QACPuF,KAAM2B,IACN9C,KAAM+C,QCPJC,G,KAAAA,MAUFC,GAAU,SAAC,GAA8B,IAA5BV,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAMd,EAAW,EAAXA,KAC3BgB,EAAc,SAACvB,GAAD,OAAU,kBAAMqB,EAAKrB,KAEzC,OACE,kBAAC6B,GAAD,CAAOrD,MAAO,IAAK7D,UAAU,WAC3B,wBAAMoH,KAAK,SAASC,aAAcZ,EAAUzG,UAAU,gBACnDsH,GAAK1B,GAAMxG,KAAI,gBAAGiG,EAAH,EAAGA,KAAYkC,EAAf,EAASrD,KAAYpE,EAArB,EAAqBA,MAArB,OACd,uBAAMnC,KAAN,CAAWuB,IAAKmG,EAAMnB,KAAM,kBAACqD,EAAD,MAAUlF,QAASuE,EAAYvB,IACxDvF,SAcbqH,GAAQnJ,aAAe,CACrB4H,KAAM,UAGOuB,UClCPK,I,YAAAA,QAAQC,G,KAAAA,QAASC,G,KAAAA,OAEnBC,GAAY,SAACrE,EAAKsE,GAAN,OAChB,uBAAQvF,QAAS,kBAAMuF,EAAOtE,IAAMW,KAAK,QACtCX,EAAIuE,gBAiBHC,GAAY,SAAC,GAOZ,IANLC,EAMI,EANJA,SACAtB,EAKI,EALJA,SACAC,EAII,EAJJA,KACAsB,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACA1G,EACI,EADJA,MAEA7D,qBAAU,WACRwK,KAAKC,eAAeH,KACnB,CAACA,IAEJ,IAAMI,IAAe7G,EACf8G,IAAgB9G,EAChB+G,IAAmB/G,EAEzB,OACE,wBAAQvB,UAAU,cACfoI,GACC,kBAACZ,GAAD,CAAQxH,UAAU,UAChB,yCAGJ,4BACGqI,GAAe,kBAAC,GAAD,CAAS5B,SAAUA,EAAUC,KAAMA,IACnD,wBAAQ1G,UAAU,sBACfsI,GAAkB,kBAAC,GAAD,CAAY7B,SAAUA,EAAUC,KAAMA,IACzD,kBAACe,GAAD,CAASzH,UAAU,WAAW+H,GAC9B,kBAACL,GAAD,KACE,2BACE,uBAAK3G,GAAI,IAAKwH,kBACd,uBAAKxH,GAAI,GACN4G,GAAU,KAAMM,GAChB,IACAN,GAAU,KAAMM,UAmBjCH,GAAU9J,aAAe,CACvBuD,MAAO,MAGMuG,U,kBCrETU,GAAe,SAAC,GAQf,IAPL/B,EAOI,EAPJA,SACAC,EAMI,EANJA,KACAsB,EAKI,EALJA,SACAC,EAII,EAJJA,YACA1G,EAGI,EAHJA,MACAqE,EAEI,EAFJA,KACAtD,EACI,EADJA,QAEA,OACE,uBAAgBmG,OAAQC,KACrBpG,GAAW,kBAACqG,GAAA,EAAD,CAAQC,aAAW,IAC/B,kBAAC,GAAD,CACElC,KAAMA,EACND,SAAUA,EACVuB,SAAUA,EACVC,YAAaA,EACb1G,MAAOA,GAEP,kBAAC,GAAD,CAAiBqE,KAAMA,OAgB/B4C,GAAaxK,aAAe,CAC1BuD,MAAO,KACPqE,KAAM,MAGR,IAYMzE,GAAqB,CACzBuF,KAAMlE,OACNyF,YAAaY,KAGAxH,uBAjBS,SAAC,GAAD,IACZyH,EADY,EACtBC,OAAUD,SADY,IAEtBpJ,OAAUsI,EAFY,EAEZA,SAAU1F,EAFE,EAEFA,QAFE,IAGtBb,KAAQF,EAHc,EAGdA,MAAOqE,EAHO,EAGPA,KAHO,MAIjB,CACLa,SAAUqC,EAASrC,SACnBuB,WACA1F,UACAf,QACAqE,UAQsCzE,GAAzBE,CAA6CmH","file":"static/js/6.91b60cc1.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { any, func, object, string } from 'prop-types';\nimport { Form } from 'antd';\n\nconst Field = ({\n  name,\n  component: Input,\n  onChange,\n  item,\n  validate,\n  label,\n  options,\n  ...rest\n}) => {\n  const changeValue = (value, error) => {\n    onChange({ name, value, error, touched: true });\n  };\n\n  const handleOnChange = (e) => {\n    const val = e.target ? e.target.value : e;\n    const error = validate ? validate(val) : null;\n    changeValue(val, error);\n  };\n\n  const handleOnBlur = () => {\n    const error = validate ? validate(item?.value) : null;\n    changeValue(item?.value, error);\n  };\n\n  useEffect(() => {\n    if (item.value) handleOnChange(item.value);\n  }, []);\n\n  const getStatus = () => {\n    if (item?.value) {\n      return item?.error ? 'error' : 'success';\n    }\n    return null;\n  };\n\n  return (\n    <Form.Item\n      label={label}\n      htmlFor={name}\n      validateStatus={getStatus()}\n      help={item?.error}\n      {...options}\n    >\n      <Input\n        name={name}\n        value={item?.value}\n        onBlur={handleOnBlur}\n        onChange={handleOnChange}\n        {...rest}\n      />\n    </Form.Item>\n  );\n};\n\nField.propTypes = {\n  name: string.isRequired,\n  component: any.isRequired,\n  onChange: func.isRequired,\n  item: any,\n  validate: func,\n  label: string,\n  options: object,\n};\n\nField.defaultProps = {\n  validate: null,\n  item: undefined,\n  label: undefined,\n  options: {},\n};\n\nexport default Field;\n","import { useEffect, useMemo, useState } from 'react';\n\nconst formInitializer = (fields) =>\n  fields.reduce(\n    (initialForm, { name, initialValue }) => ({\n      ...initialForm,\n      [name]: {\n        value: initialValue,\n        error: undefined,\n        touched: !!initialValue,\n      },\n    }),\n    {}\n  );\n\nconst useForm = (fields) => {\n  const [form, setForm] = useState(formInitializer(fields));\n  const [errors, setErrors] = useState(false);\n\n  const formValues = useMemo(\n    () =>\n      Object.entries(form).reduce((fv, [key, { value }]) => {\n        return { ...fv, [key]: value };\n      }, {}),\n    [form]\n  );\n\n  useEffect(() => {\n    setErrors(\n      Object.values(form)\n        .map(({ error }) => error)\n        .filter((err) => !!err)\n    );\n  }, [form]);\n\n  const handleChange = (updatedItem) => {\n    setForm({\n      ...form,\n      [updatedItem.name]: updatedItem,\n    });\n  };\n\n  return [handleChange, formValues, errors, form];\n};\n\nexport default useForm;\n","import React from 'react';\nimport { any, arrayOf, func, object, shape, string } from 'prop-types';\nimport { Button, Col, Form, Modal, Row } from 'antd';\nimport Field from '../Field';\nimport useForm from '../../../hooks/useForm';\n\nconst FormGenerator = ({ fields, onSubmit, layout }) => {\n  const [handleChange, formValues, errors, form] = useForm(fields);\n\n  const handleSubmit = () => {\n    if (!errors.length) {\n      onSubmit(formValues);\n    } else {\n      Modal.error({\n        title: 'Oops!',\n        content: `Looks like there are some errors on the form, \n                  check them out and try again!`,\n      });\n    }\n  };\n\n  return (\n    <Form onFinish={handleSubmit} layout=\"vertical\" className=\"form-generator\">\n      <Row {...layout}>\n        {fields.map(\n          ({\n            component,\n            name,\n            placeholder,\n            label,\n            validate,\n            options,\n            layout: { col } = {},\n          }) => (\n            <Col {...col} key={name}>\n              <Field\n                component={component}\n                name={name}\n                placeholder={placeholder}\n                label={label || placeholder}\n                item={form[name]}\n                validate={validate}\n                options={options}\n                onChange={handleChange}\n              />\n            </Col>\n          )\n        )}\n      </Row>\n      <Button htmlType=\"submit\">Submit</Button>\n    </Form>\n  );\n};\n\nFormGenerator.propTypes = {\n  fields: arrayOf(\n    shape({\n      name: string,\n      component: any,\n      placeholder: string,\n      label: string,\n      validate: func,\n    })\n  ).isRequired,\n  onSubmit: func.isRequired,\n  layout: object,\n};\n\nFormGenerator.defaultProps = {\n  layout: {},\n};\n\nexport default FormGenerator;\n","import React from 'react';\nimport { Input } from 'antd';\nimport { func } from 'prop-types';\nimport FormGenerator from '../../../../../components/form/FormGenerator';\n\nconst LogInForm = ({ submitLogIn }) => {\n  const fields = [\n    {\n      name: 'username',\n      placeholder: 'Username',\n      component: Input,\n      layout: { col: { span: 24 } },\n    },\n    {\n      name: 'password',\n      placeholder: 'Password',\n      layout: { col: { span: 24 } },\n      component: Input.Password,\n    },\n  ];\n\n  const layout = { gutter: 16 };\n\n  return (\n    <div className=\"log-in-form\">\n      <FormGenerator onSubmit={submitLogIn} fields={fields} layout={layout} />\n    </div>\n  );\n};\n\nLogInForm.propTypes = {\n  submitLogIn: func.isRequired,\n};\n\nLogInForm.defaultProps = {};\n\nexport default LogInForm;\n","import React from 'react';\nimport { Card, Col, Row, Tooltip } from 'antd';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport LogInForm from './components/LogInForm';\nimport { logInNotifier } from '../../../redux/modules/auth/actions/logIn';\nimport './logIn.scss';\n\nconst tooltipData = (\n  <p>\n    username: test\n    <br />\n    password: test\n  </p>\n);\n\nconst LogIn = ({ logIn }) => {\n  return (\n    <Row className=\"log-in\" justify=\"center\" align=\"middle\">\n      <Col xs={24} md={12} lg={10}>\n        <Card\n          title=\"Log in\"\n          extra={\n            <Tooltip title={tooltipData}>\n              <InfoCircleOutlined />\n            </Tooltip>\n          }\n        >\n          <LogInForm submitLogIn={logIn} />\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nLogIn.propTypes = {\n  logIn: func.isRequired,\n};\n\nLogIn.defaultProps = {};\n\nconst mapDispatchToProps = {\n  logIn: logInNotifier,\n};\n\nexport default connect(null, mapDispatchToProps)(LogIn);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string } from 'prop-types';\nimport { t } from '../../i18n';\nimport LogIn from '../Auth/LogIn';\n\nconst Home = ({ token }) => {\n  if (!token) return <LogIn />;\n  return <div className=\"home\">{t('Hello team')}</div>;\n};\n\nHome.propTypes = {\n  token: string,\n};\n\nHome.defaultProps = {\n  token: null,\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  token: auth.token,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { Card } from 'antd';\nimport { postType } from '../../../../../utils/types/postsTypes';\n\nconst PostListItem = ({ post }) => {\n  return <Card title={post.title}>{post.body}</Card>;\n};\n\nPostListItem.propTypes = {\n  post: postType.isRequired,\n};\n\nPostListItem.defaultProps = {};\n\nexport default PostListItem;\n","import { number, shape, string } from 'prop-types';\n\nexport const postType = shape({\n  id: number,\n  title: string,\n  body: string,\n});\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayOf, func } from 'prop-types';\nimport { Button, Card, List } from 'antd';\nimport { push } from 'react-router-redux';\nimport { fetchPostsNotifier } from '../../../redux/modules/posts/actions/fetchPosts';\nimport { postType } from '../../../utils/types/postsTypes';\nimport { NEW_POST_PATH } from '../../../routing/paths';\nimport PostListItem from './components/PostListItem';\n\nconst PostsList = ({ fetchPosts, posts, newPost }) => {\n  useEffect(() => {\n    if (!posts.length) fetchPosts();\n  }, []);\n\n  return (\n    <Card\n      className=\"posts-list\"\n      title=\"Posts list\"\n      extra={<Button onClick={newPost}>Add Post</Button>}\n    >\n      <List loading={!posts.length}>\n        {posts.map((post) => {\n          return (\n            <List.Item key={post.id}>\n              <PostListItem post={post} />\n            </List.Item>\n          );\n        })}\n      </List>\n    </Card>\n  );\n};\n\nPostsList.propTypes = {\n  fetchPosts: func.isRequired,\n  newPost: func.isRequired,\n  posts: arrayOf(postType).isRequired,\n};\n\nPostsList.defaultProps = {};\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts.posts,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchPosts: fetchPostsNotifier,\n  newPost: () => push(NEW_POST_PATH),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsList);\n","import { number, shape, string } from 'prop-types';\n\nexport const userType = shape({\n  id: number,\n  email: string,\n  name: string,\n  phone: string,\n  username: string,\n  website: string,\n  address: shape({\n    street: string,\n    suite: string,\n    city: string,\n    zipcode: string,\n    geo: shape({\n      lat: string,\n      lng: string,\n    }),\n  }),\n});\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayOf, func } from 'prop-types';\nimport { Button, Table } from 'antd';\nimport { EyeFilled } from '@ant-design/icons';\nimport { fetchUsersNotifier } from '../../../redux/modules/users/actions/fetchUsers';\nimport { userType } from '../../../utils/types/usersTypes';\nimport { showUserNotifier } from '../../../redux/modules/users/actions/showUser';\n\nconst UsersIndex = ({ fetchUsers, users, showUser }) => {\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const columns = [\n    {\n      title: 'id',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Username',\n      dataIndex: 'username',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone',\n    },\n    {\n      title: 'Website',\n      dataIndex: 'website',\n    },\n    {\n      dataIndex: 'id',\n      width: 100,\n      render: (_id, row) => (\n        <Button\n          type=\"link\"\n          onClick={() => showUser(row)}\n          icon={<EyeFilled />}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"users-index\">\n      <Table rowKey=\"id\" dataSource={users} columns={columns} />\n    </div>\n  );\n};\n\nUsersIndex.propTypes = {\n  fetchUsers: func.isRequired,\n  showUser: func.isRequired,\n  users: arrayOf(userType).isRequired,\n};\n\nUsersIndex.defaultProps = {};\n\nconst mapStateToProps = (state) => ({\n  users: state.users.userList,\n});\n\nconst mapDispatchToProps = {\n  fetchUsers: fetchUsersNotifier,\n  showUser: showUserNotifier,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersIndex);\n","import React, { useEffect } from 'react';\nimport { Card, Descriptions, Skeleton } from 'antd';\nimport { connect } from 'react-redux';\nimport { useRouteMatch } from 'react-router';\nimport { func } from 'prop-types';\nimport { userType } from '../../../utils/types/usersTypes';\nimport { fetchUserDetailsNotifier } from '../../../redux/modules/users/actions/fetchUserDetails';\n\nconst UserDetail = ({ user, fetchUserDetails }) => {\n  const {\n    params: { userId },\n  } = useRouteMatch();\n\n  useEffect(() => {\n    fetchUserDetails(userId);\n  }, []);\n\n  if (!user) return <Skeleton />;\n\n  return (\n    <Card\n      title={user ? `${user.id} - ${user.name}` : 'User Info'}\n      className=\"user-detail\"\n    >\n      {user ? (\n        <Descriptions>\n          <Descriptions.Item label=\"email\">{user.email}</Descriptions.Item>\n          <Descriptions.Item label=\"phone\">{user.phone}</Descriptions.Item>\n          <Descriptions.Item label=\"username\">\n            {user.username}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"website\">{user.website}</Descriptions.Item>\n          <Descriptions.Item label=\"Address\">\n            {`${user.address.street} - ${user.address.suite}, ${user.address.city}`}\n          </Descriptions.Item>\n        </Descriptions>\n      ) : (\n        <Skeleton active />\n      )}\n    </Card>\n  );\n};\n\nUserDetail.propTypes = {\n  user: userType,\n  fetchUserDetails: func.isRequired,\n};\n\nUserDetail.defaultProps = {\n  user: undefined,\n};\n\nconst mapStateToProps = ({ users }) => ({\n  user: users.userDetail,\n});\n\nconst mapDispatchToProps = {\n  fetchUserDetails: fetchUserDetailsNotifier,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetail);\n","import { lazy } from 'react';\nimport Home from '../pages/Home';\nimport * as paths from './paths';\nimport PostsList from '../pages/Posts/PostsList';\nimport { USER_ROLE } from '../utils/auth/roles';\nimport UsersIndex from '../pages/Users/UsersIndex';\nimport UserDetail from '../pages/Users/UserDetail';\n\nconst Form = lazy(() => import('../pages/Posts/NewPost'));\n\nconst routes = [\n  {\n    title: 'Home',\n    path: paths.HOME_PATH,\n    Component: Home,\n    exact: true,\n    roles: [],\n  },\n  {\n    title: 'Posts',\n    path: paths.POSTS_PATH,\n    Component: PostsList,\n    exact: true,\n    roles: [USER_ROLE],\n  },\n  {\n    title: 'New Post',\n    path: paths.NEW_POST_PATH,\n    Component: Form,\n    exact: true,\n    roles: [USER_ROLE],\n  },\n  {\n    title: 'Users',\n    path: paths.USERS_PATH,\n    Component: UsersIndex,\n    exact: true,\n    roles: [USER_ROLE],\n  },\n  {\n    title: 'User detail',\n    path: paths.USER_DETAIL_PATH(':userId'),\n    Component: UserDetail,\n    exact: true,\n    roles: [USER_ROLE],\n  },\n];\n\nexport default routes;\n","import { Skeleton } from 'antd';\nimport React, { Suspense, useMemo } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { string } from 'prop-types';\nimport { HOME_PATH } from '../routing/paths';\nimport routes from '../routing/routes';\n\n/**\n * This is the main routes container. We add it inside the app's layout so that\n * it won't update each time we change routes.\n *\n */\nconst RoutesContainer = ({ role }) => {\n  const roleRoutes = useMemo(\n    () => routes.filter(({ roles }) => !roles.length || roles.includes(role)),\n    [role]\n  );\n\n  return (\n    <Suspense fallback={<Skeleton active />}>\n      <Switch>\n        {roleRoutes.map(({ path, Component, exact }) => (\n          <Route key={path} path={path} component={Component} exact={exact} />\n        ))}\n        <Redirect to={HOME_PATH} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutesContainer.propTypes = {\n  role: string,\n};\n\nRoutesContainer.defaultProps = {\n  role: '',\n};\n\nexport default RoutesContainer;\n","import React from 'react';\nimport { Breadcrumb as AntBreadcrumb } from 'antd';\nimport { func, string } from 'prop-types';\nimport { startCase } from 'lodash';\nimport { HOME_PATH } from '../../../routing/paths';\nimport './breadcrumb.scss';\n\nconst reconstructPath = (path, index) => {\n  const newPath = path.split('/');\n  const pathArr = newPath.filter((_path, i) => i <= index);\n  return pathArr.join('/');\n};\n\n/**\n * Breadcrumb component\n * This component handles the breadcrumb given a pathname and a function to\n * go to a specific location\n *\n * @pathname - (redux) the actual pathname from the router\n * @goTo     - (redux) function mapped to react-router-redux \"push\"\n *\n */\nconst Breadcrumb = ({ pathname, goTo }) => {\n  const locationItems = pathname ? pathname.split('/') : [];\n\n  const handleClick = (path) => () => {\n    goTo(path);\n  };\n\n  return (\n    <AntBreadcrumb className=\"breadcrumb\">\n      <AntBreadcrumb.Item\n        className=\"clickable\"\n        onClick={handleClick(HOME_PATH)}\n      >\n        Home\n      </AntBreadcrumb.Item>\n      {locationItems.map((item, index) => (\n        <AntBreadcrumb.Item\n          key={item}\n          className={index < locationItems.length - 1 ? 'clickable' : ''}\n          onClick={handleClick(reconstructPath(pathname, index))}\n        >\n          {startCase(item)}\n        </AntBreadcrumb.Item>\n      ))}\n    </AntBreadcrumb>\n  );\n};\n\nBreadcrumb.propTypes = {\n  pathname: string.isRequired,\n  goTo: func.isRequired,\n};\n\nexport default Breadcrumb;\n","import { ContainerOutlined, UserOutlined } from '@ant-design/icons';\nimport { POSTS_PATH, USERS_PATH } from './paths';\n\nexport default {\n  public: [\n    {\n      title: 'Posts',\n      path: POSTS_PATH,\n      icon: ContainerOutlined,\n    },\n    {\n      title: 'Users',\n      path: USERS_PATH,\n      icon: UserOutlined,\n    },\n  ],\n};\n","import React from 'react';\nimport { Menu, Layout } from 'antd';\nimport { func, string } from 'prop-types';\nimport './sidebar.scss';\nimport menu from '../../../routing/menu';\n\nconst { Sider } = Layout;\n\n/**\n * Sidebar component\n * This component handles the sidebar menu\n *\n * @pathname - (redux) the actual pathname from the router\n * @goTo     - (redux) function mapped to react-router-redux \"push\"\n *\n */\nconst Sidebar = ({ pathname, goTo, role }) => {\n  const handleClick = (path) => () => goTo(path);\n\n  return (\n    <Sider width={200} className=\"sidebar\">\n      <Menu mode=\"inline\" selectedKeys={pathname} className=\"sidebar-menu\">\n        {menu[role].map(({ path, icon: Icon, title }) => (\n          <Menu.Item key={path} icon={<Icon />} onClick={handleClick(path)}>\n            {title}\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Sider>\n  );\n};\n\nSidebar.propTypes = {\n  pathname: string.isRequired,\n  goTo: func.isRequired,\n  role: string,\n};\n\nSidebar.defaultProps = {\n  role: 'public',\n};\n\nexport default Sidebar;\n","import React, { useEffect } from 'react';\nimport { Button, Col, Layout, Row } from 'antd';\nimport { func, node, string } from 'prop-types';\nimport i18n from 'i18next';\nimport Breadcrumb from '../Breadcrumb';\nimport Sidebar from '../Sidebar';\nimport './appLayout.scss';\n\nconst { Header, Content, Footer } = Layout;\n\nconst lngButton = (lng, action) => (\n  <Button onClick={() => action(lng)} type=\"link\">\n    {lng.toUpperCase()}\n  </Button>\n);\n\n/**\n * This is the main app layout component. We define elements like\n * header and sidebar, it will render any children passed as props inside\n * the layout content.\n *\n * In this case, we will connect this Parent component to redux to get the\n * pathname and other router functions to pass to @Breadcrumb and @Sidebar\n * since both have the same redux dependencies.\n *\n * @children        - Children prop, will render a react node inside the layout\n * @pathname        - (redux) the actual pathname from the router\n * @goTo            - (redux) function mapped to react-router-redux \"push\"\n */\nconst AppLayout = ({\n  children,\n  pathname,\n  goTo,\n  language,\n  setLanguage,\n  token,\n}) => {\n  useEffect(() => {\n    i18n.changeLanguage(language);\n  }, [language]);\n\n  const withHeader = !!token;\n  const withSidebar = !!token;\n  const withBreadcrumb = !!token;\n\n  return (\n    <Layout className=\"app-layout\">\n      {withHeader && (\n        <Header className=\"header\">\n          <span>My App</span>\n        </Header>\n      )}\n      <Layout>\n        {withSidebar && <Sidebar pathname={pathname} goTo={goTo} />}\n        <Layout className=\"app-layout-content\">\n          {withBreadcrumb && <Breadcrumb pathname={pathname} goTo={goTo} />}\n          <Content className=\"content\">{children}</Content>\n          <Footer>\n            <Row>\n              <Col md={20}>{process.env.REACT_APP_NAME}</Col>\n              <Col md={4}>\n                {lngButton('es', setLanguage)}\n                {'/'}\n                {lngButton('en', setLanguage)}\n              </Col>\n            </Row>\n          </Footer>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n\nAppLayout.propTypes = {\n  children: node.isRequired,\n  pathname: string.isRequired,\n  goTo: func.isRequired,\n  setLanguage: func.isRequired,\n  language: string.isRequired,\n  token: string,\n};\n\nAppLayout.defaultProps = {\n  token: null,\n};\n\nexport default AppLayout;\n","import { ConfigProvider } from 'antd';\nimport esES from 'antd/es/locale/es_ES';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux';\nimport { bool, func, string } from 'prop-types';\nimport { changeLanguageNotifier } from '../redux/modules/layout/actions/changeLanguage';\nimport RoutesContainer from './RoutesContainer';\nimport AppLayout from '../components/layout/AppLayout';\nimport './app.scss';\nimport Loader from '../components/layout/Loader';\n\n/**\n * This is the main entry app component. Here we wll define the actual app layout\n * and locale provider\n *\n */\nconst AppContainer = ({\n  pathname,\n  goTo,\n  language,\n  setLanguage,\n  token,\n  role,\n  loading,\n}) => {\n  return (\n    <ConfigProvider locale={esES}>\n      {loading && <Loader transparent />}\n      <AppLayout\n        goTo={goTo}\n        pathname={pathname}\n        language={language}\n        setLanguage={setLanguage}\n        token={token}\n      >\n        <RoutesContainer role={role} />\n      </AppLayout>\n    </ConfigProvider>\n  );\n};\n\nAppContainer.propTypes = {\n  pathname: string.isRequired,\n  goTo: func.isRequired,\n  setLanguage: func.isRequired,\n  language: string.isRequired,\n  loading: bool.isRequired,\n  token: string,\n  role: string,\n};\n\nAppContainer.defaultProps = {\n  token: null,\n  role: null,\n};\n\nconst mapStateToProps = ({\n  router: { location },\n  layout: { language, loading },\n  auth: { token, role },\n}) => ({\n  pathname: location.pathname,\n  language,\n  loading,\n  token,\n  role,\n});\n\nconst mapDispatchToProps = {\n  goTo: push,\n  setLanguage: changeLanguageNotifier,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n"],"sourceRoot":""}